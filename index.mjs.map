{"version":3,"file":"index.mjs","sources":["../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name isEqual\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/base/assert/is-equal}\n*/\nimport isEqual from '@stdlib/complex-base-assert-is-equal';\nsetReadOnly( ns, 'isEqual', isEqual );\n\n/**\n* @name isEqualf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/base/assert/is-equalf}\n*/\nimport isEqualf from '@stdlib/complex-base-assert-is-equalf';\nsetReadOnly( ns, 'isEqualf', isEqualf );\n\n/**\n* @name isNotEqual\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/base/assert/is-not-equal}\n*/\nimport isNotEqual from '@stdlib/complex-base-assert-is-not-equal';\nsetReadOnly( ns, 'isNotEqual', isNotEqual );\n\n/**\n* @name isNotEqualf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/base/assert/is-not-equalf}\n*/\nimport isNotEqualf from '@stdlib/complex-base-assert-is-not-equalf';\nsetReadOnly( ns, 'isNotEqualf', isNotEqualf );\n\n/**\n* @name isSameValue\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/base/assert/is-same-value}\n*/\nimport isSameValue from '@stdlib/complex-base-assert-is-same-value';\nsetReadOnly( ns, 'isSameValue', isSameValue );\n\n/**\n* @name isSameValuef\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/base/assert/is-same-valuef}\n*/\nimport isSameValuef from '@stdlib/complex-base-assert-is-same-valuef';\nsetReadOnly( ns, 'isSameValuef', isSameValuef );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["ns","setReadOnly","isEqual","isEqualf","isNotEqual","isNotEqualf","isSameValue","isSameValuef"],"mappings":";;m8CAoCA,IAAAA,EAAA,CAAA,EAUAC,EAAAD,EAAA,UAAAE,GAUAD,EAAAD,EAAA,WAAAG,GAUAF,EAAAD,EAAA,aAAAI,GAUAH,EAAAD,EAAA,cAAAK,GAUAJ,EAAAD,EAAA,cAAAM,GAUAL,EAAAD,EAAA,eAAAO"}